# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  my-executor:
    docker:
      - image: cimg/node:16.10
    
orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  ft-healthcheck-validator: financial-times/ft-healthcheck-validator@1.1.4

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build_and_test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    executor: my-executor
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Build Frontend
          command: npm run build && ls -lrt && pwd && mkdir -p /tmp/project
      -  persist_to_workspace:
          root: ~/project
          paths:
            - .
  deploy_frontend:
    executor: my-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy Frontend
          command: |
                    echo "using following project $PROJECT_ID" &&
                    ./node_modules/.bin/firebase use $PROJECT_ID --token $FIREBASE_DEPLOY_TOKEN &&
                    echo 'deploying' &&
                    ./node_modules/.bin/firebase deploy --only hosting --token $FIREBASE_DEPLOY_TOKEN || {echo "something went wrong & exiting" exit 1;}
      - ft-healthcheck-validator/validate:
          healthcheck-url: ' https://${PROJECT_ID}.web.app'
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  frontend:
    jobs:
      - build_and_test
      - deploy_frontend:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only:
                - main
